=================
pov-simple-backup
=================

--------------------------------------
create non-incremental nightly backups
--------------------------------------

:Author: Marius Gedminas <marius@gedmin.as>
:Date: 2013-08-28
:Version: 0.1
:Manual section: 8


SYNOPSIS
========

**pov-simple-backup** [**-v**] [**-n**] [**-o** | **-s**] [**-f** *configfile*]

**pov-simple-backup** [**-h**]


DESCRIPTION
===========

**pov-simple-backup** is run every night from cron to create a nightly
backup to ``/backup/YYYY-MM-DD``.  You specify things you want backed up
in ``/etc/pov/backup``.  If that file doesn't exist, the cron script
does nothing, silently.


OPTIONS
=======

-h           Print brief usage message and exit.
-v           Verbose output: show what is being backed up.
-n           Only print things that are being backed up, don't actually
             back them up.
-o           Overwrite existing backup files instead of aborting.
-s           Skip existing backup files instead of aborting.
-f FILENAME  Use the specified config file instead of ``/etc/pov/backup``.


CONFIGURATION FILE
==================

``/etc/pov/backup`` is a shell script that can use any of the available
backup commands.

Example ::

    back_up /etc
    back_up /root
    back_up /usr/local
    back_up /var/cache/debconf/config.dat
    back_up_dpkg_selections
    back_up_postgresql
    clean_up_old_backups 14
    copy_backup_to user@otherserver:/backup/myhostname/ -i /path/to/ssh-key.rsa


CONFIG FILE COMMANDS
====================

.. documentation generated by running ./extract-documentation.py

back_up <pathname> [<tar options>]
  Back up a directory or a single file

  Creates <filename>.tar.gz, where the <filename> is constructed
  from the <pathname> by stripping leading slashes and replacing
  all other slashes with hyphens.

  Examples::

      back_up /var/cache/debconf/config.dat
      back_up /opt/myapp --exclude 'opt/myapp/var/zdaemonsock'

   would create var-cache-debconf-config.dat.tar.gz and opt-myapp.tar.gz


back_up_dpkg_selections
  Back up dpkg selections (i.e. list of installed packages)

  Creates dpkg--get-selections.gz


back_up_postgresql
  Back up all PostgreSQL databases in the main cluster

  Creates postgresql-dump.sql.gz

  Bugs:

  - a single dump file for all databases is unwieldy
  - a text dump file is inefficient


back_up_mysql
  Back up all MySQL databases

  Creates mysql-dump.sql.gz

  Bugs:

  - a single dump file for all databases is unwieldy
  - a text dump file is inefficient


clean_up_old_backups <number> [<directory> [<suffix>]]
  Remove old backups, keep last <number>


  Example::

      clean_up_old_backups 14
      clean_up_old_backups 14 /backup/otherhost/
      clean_up_old_backups 14 /backup/ -git

  to keep just two weeks' backups


copy_backup_to [<user>@]<server>:<path> [<scp options>]
  Copy today's backups to a remote server over SSH

  Destination directory must exist on the remote host.


  Example::

      copy_backup_to backups@example.com:/backup/myhostname/ -i key.rsa

.. end of generated chunk


BUGS
====

**pov-simple-backup** is reinventing the wheel, badly.  For example
it doesn't support incremental backups.
